{"numTotalTestSuites":17,"numPassedTestSuites":11,"numFailedTestSuites":6,"numPendingTestSuites":0,"numTotalTests":19,"numPassedTests":19,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751834846804,"success":false,"testResults":[{"assertionResults":[],"startTime":1751834846804,"endTime":1751834846804,"status":"failed","message":"Failed to resolve import \"../ErrorBoundary\" from \"test/components/ErrorBoundary.test.tsx\". Does the file exist?","name":"C:/Users/A/Documents/Git/YT/ytmain-v6/test/components/ErrorBoundary.test.tsx"},{"assertionResults":[],"startTime":1751834846804,"endTime":1751834846804,"status":"failed","message":"Failed to resolve import \"../../../services/unifiedDataService\" from \"test/hooks/useVideos.test.tsx\". Does the file exist?","name":"C:/Users/A/Documents/Git/YT/ytmain-v6/test/hooks/useVideos.test.tsx"},{"assertionResults":[],"startTime":1751834846804,"endTime":1751834846804,"status":"failed","message":"Failed to resolve import \"../CommunityPage\" from \"test/integration/CommunityPage.test.tsx\". Does the file exist?","name":"C:/Users/A/Documents/Git/YT/ytmain-v6/test/integration/CommunityPage.test.tsx"},{"assertionResults":[{"ancestorTitles":["buildUrl function with different MODE values","MODE: development"],"fullName":"buildUrl function with different MODE values MODE: development should use proxy endpoint for videos in development mode","status":"passed","title":"should use proxy endpoint for videos in development mode","duration":11.314399999995658,"failureMessages":[],"location":{"line":63,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","MODE: development"],"fullName":"buildUrl function with different MODE values MODE: development should use proxy endpoint for channels in development mode","status":"passed","title":"should use proxy endpoint for channels in development mode","duration":3.856500000001688,"failureMessages":[],"location":{"line":75,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","MODE: development"],"fullName":"buildUrl function with different MODE values MODE: development should work with different localhost ports","status":"passed","title":"should work with different localhost ports","duration":5.131900000000314,"failureMessages":[],"location":{"line":87,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","MODE: production"],"fullName":"buildUrl function with different MODE values MODE: production should use direct Google API endpoint for videos in production mode","status":"passed","title":"should use direct Google API endpoint for videos in production mode","duration":3.337500000001455,"failureMessages":[],"location":{"line":116,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","MODE: production"],"fullName":"buildUrl function with different MODE values MODE: production should use direct Google API endpoint for channels in production mode","status":"passed","title":"should use direct Google API endpoint for channels in production mode","duration":3.036000000000058,"failureMessages":[],"location":{"line":129,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","MODE: test"],"fullName":"buildUrl function with different MODE values MODE: test should use direct Google API endpoint in test mode","status":"passed","title":"should use direct Google API endpoint in test mode","duration":2.9074000000036904,"failureMessages":[],"location":{"line":154,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","MODE: staging"],"fullName":"buildUrl function with different MODE values MODE: staging should use direct Google API endpoint for custom build modes","status":"passed","title":"should use direct Google API endpoint for custom build modes","duration":2.926900000005844,"failureMessages":[],"location":{"line":178,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","parameter handling"],"fullName":"buildUrl function with different MODE values parameter handling should properly encode URL parameters","status":"passed","title":"should properly encode URL parameters","duration":2.3571999999985565,"failureMessages":[],"location":{"line":203,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","parameter handling"],"fullName":"buildUrl function with different MODE values parameter handling should skip empty parameter values","status":"passed","title":"should skip empty parameter values","duration":2.379399999997986,"failureMessages":[],"location":{"line":216,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","parameter handling"],"fullName":"buildUrl function with different MODE values parameter handling should handle multiple video IDs correctly","status":"passed","title":"should handle multiple video IDs correctly","duration":2.535200000005716,"failureMessages":[],"location":{"line":231,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","parameter handling"],"fullName":"buildUrl function with different MODE values parameter handling should always add API key parameter","status":"passed","title":"should always add API key parameter","duration":2.448099999994156,"failureMessages":[],"location":{"line":240,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","missing API key handling"],"fullName":"buildUrl function with different MODE values missing API key handling should handle missing API key gracefully","status":"passed","title":"should handle missing API key gracefully","duration":4.182800000002317,"failureMessages":[],"location":{"line":261,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","URL structure validation"],"fullName":"buildUrl function with different MODE values URL structure validation should generate valid URLs that can be parsed","status":"passed","title":"should generate valid URLs that can be parsed","duration":5.986499999999069,"failureMessages":[],"location":{"line":289,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","URL structure validation"],"fullName":"buildUrl function with different MODE values URL structure validation should maintain parameter order and formatting","status":"passed","title":"should maintain parameter order and formatting","duration":3.4043000000019674,"failureMessages":[],"location":{"line":304,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","edge cases"],"fullName":"buildUrl function with different MODE values edge cases should handle empty endpoint","status":"passed","title":"should handle empty endpoint","duration":2.2906999999977415,"failureMessages":[],"location":{"line":333,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","edge cases"],"fullName":"buildUrl function with different MODE values edge cases should handle empty parameters object","status":"passed","title":"should handle empty parameters object","duration":2.087200000001758,"failureMessages":[],"location":{"line":342,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","edge cases"],"fullName":"buildUrl function with different MODE values edge cases should handle special characters in endpoint","status":"passed","title":"should handle special characters in endpoint","duration":2.111299999996845,"failureMessages":[],"location":{"line":349,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","regression prevention"],"fullName":"buildUrl function with different MODE values regression prevention should maintain consistent URL format across different modes","status":"passed","title":"should maintain consistent URL format across different modes","duration":5.13470000000234,"failureMessages":[],"location":{"line":359,"column":5},"meta":{}},{"ancestorTitles":["buildUrl function with different MODE values","regression prevention"],"fullName":"buildUrl function with different MODE values regression prevention should preserve API key security in all modes","status":"passed","title":"should preserve API key security in all modes","duration":8.783300000002782,"failureMessages":[],"location":{"line":394,"column":5},"meta":{}}],"startTime":1751834896015,"endTime":1751834896092.7832,"status":"passed","message":"","name":"C:/Users/A/Documents/Git/YT/ytmain-v6/test/services/buildUrl.test.ts"},{"assertionResults":[],"startTime":1751834846804,"endTime":1751834846804,"status":"failed","message":"Failed to resolve import \"../unifiedDataService\" from \"test/services/unifiedDataService.simple.test.ts\". Does the file exist?","name":"C:/Users/A/Documents/Git/YT/ytmain-v6/test/services/unifiedDataService.simple.test.ts"},{"assertionResults":[],"startTime":1751834846804,"endTime":1751834846804,"status":"failed","message":"Failed to resolve import \"../../../services/realVideoService\" from \"test/services/unifiedDataService.test.ts\". Does the file exist?","name":"C:/Users/A/Documents/Git/YT/ytmain-v6/test/services/unifiedDataService.test.ts"},{"assertionResults":[],"startTime":1751834846804,"endTime":1751834846804,"status":"failed","message":"Failed to resolve import \"../youtubeService\" from \"test/services/youtubeService.test.ts\". Does the file exist?","name":"C:/Users/A/Documents/Git/YT/ytmain-v6/test/services/youtubeService.test.ts"}]}